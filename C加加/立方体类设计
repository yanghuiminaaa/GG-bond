#include<iostream>
using namespace std;
//立方体类设计
//1.创建立方体类
//2.设计属性
//3.设计行为 获取立方体的体积和面积
//4.分别利用全局函数和成员函数 判断两立方体是否相等
class lifangti
{
public:
	//设置长
	void setL(int l)
	{
		m_L = l;
	}
	//获取长
	int getL()
	{
		return m_L;
	}
	//设置宽
	void setW(int w)
	{
		m_W=w;
	}
	//获取宽
	int getW()
	{
		return m_W;
	}
	//设置高
	void setH(int w)
	{
		m_H = w;
	}
	//获取高
	int getH()
	{
		return m_H;
	}
	//获取立方体面积
	int calculateS()
	{
		return 2 * m_L * m_W +2*m_L* m_H+2*m_W*m_H;
	}
	//获取立方体体积
	int calculateV()
	{
		return m_L * m_W * m_H;
	}
    //利用成员函数来判断两立方体是否相等
	bool isSameByclass(lifangti &c)
	{
		if (m_L == c.getL() && m_W == c.getW() && m_H== c.getH())
		{
			return true;
		}
		return false;
	}
private:
	int m_L;
	int m_W;
	int m_H;
};
//利用全局函数来判断立方体是否相等
bool isSame(lifangti &c1,lifangti &c2)
{
	if(c1.getL()==c2.getL()&&c1.getW()==c2.getW() && c1.getH() == c2.getH())
	{
		return true; 
	}
	return false;
}


int main()
{
	//创建一个立方体对象
	lifangti c1;
	c1.setL(10);
	c1.setW(10);
	c1.setH(10);

	cout << "c1的面积为：" << c1.calculateS() << endl;
	cout << "c1的面积为：" << c1.calculateV() << endl;
	//创建第二个立方体对象
	lifangti c2;
	c2.setL(10);
	c2.setW(10);
	c2.setH(11);
	cout << "c2的面积为：" << c2.calculateS() << endl;
	cout << "c2的面积为：" << c2.calculateV() << endl;
	//利用全局函数进行计算
	bool ret = isSame(c1, c2);
	if(ret)
	{
		cout << "c1和c2是相等的" << endl;
	}
	else
	{
		cout << "c1和c2是不相等的" << endl;
	}
	//利用成员函数判断的结果
	ret = c1.isSameByclass(c2);
	if (ret)
	{
		cout << "成员函数判断：c1和c2是相等的" << endl;
	}
	else
	{
		cout << "成员函数判断：c1和c2是不相等的" << endl;
	}
	return 0;
}
